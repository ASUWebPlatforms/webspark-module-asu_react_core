<?php

/**
 * Implements hook_preprocess_HOOK().
 */
function asu_react_core_preprocess_paragraph(&$variables) {
  $paragraph = $variables['paragraph'];

  $type = $paragraph->type->target_id;
  $component_builder = 'asu_react_core_process_component_' . $type;

  if (function_exists($component_builder)) {
    call_user_func_array($component_builder, [&$variables]);
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function asu_react_core_preprocess_block(&$variables) {
  $plugin_id = $variables['base_plugin_id'] ?? '';

  if ($plugin_id != 'inline_block') {
    return;
  }

  $type = $variables['derivative_plugin_id'];

  $component_builder = 'asu_react_core_process_block_component_' . $type;

  if (function_exists($component_builder)) {
    call_user_func_array($component_builder, [&$variables]);
  }
}

function asu_react_core_process_block_component_testimonial_carousel(&$variables) {
  $block = $variables['content']['#block_content'];
  $variables['content']['#prefix'] = '<div id="testimonialCarouselContainer" class="testimonial-carousel-container"></div>';

  $rand_id = random_int(0, PHP_INT_MAX);
  $variables['attributes']['class'][] = 'asu-testimonial-carousel-container';

  // Purposely not using Html::getUniqueId().
  $variables['attributes']['id'] = 'asu-testimonial-carousel-container-' . $rand_id;

  $testimonial_carousel = new \stdClass();
  $testimonial_carousel->items = [];
  $testimonial_carousel->style = ['with-image'];
  $testimonial_carousel->itemTitleCssClass = [];

  if ($block->field_accent_color->value) {
    $testimonial_carousel->style[] = $block->field_accent_color->value;
  }
  if ($block->field_citation_style->value) {
    $testimonial_carousel->style[] = $block->field_citation_style->value;
  }
  if ($block->field_heading_highlight->value) {
    $testimonial_carousel->itemTitleCssClass[] = $block->field_heading_highlight->value;
  }

  $block->field_testimonial->getValue();

  foreach ($block->field_testimonial as $paragraph_ref) {
    $testimonial_carousel->items[] = $paragraph_ref->entity->uuid();
  }

  $settings = [];
  $settings['components'][$block->bundle()][$rand_id] = $testimonial_carousel;

  $variables['content']['#attached']['drupalSettings']['asu'] = $settings;
  $variables['content']['#attached']['library'][] = 'asu_react_core/testimonial-carousel';
}

//function asu_react_core_process_component_gallery_image(&$variables) {
//  /** @var \Drupal\paragraphs\Entity\Paragraph $paragraph */
//  $paragraph = $variables['paragraph'];
//
//  $component = new \stdClass();
//
//  $settings = [];
//  $settings['components']['image'][$paragraph->id()] = $component;
//
//  $variables['content']['#attached']['drupalSettings']['asu'] = $settings;
//}

function asu_react_core_process_component_testimonial(&$variables) {
  /** @var \Drupal\paragraphs\Entity\Paragraph $paragraph */
  $paragraph = $variables['paragraph'];
  $id = $paragraph->uuid();

  $cite = new \stdClass();
  $cite->name = $paragraph->field_citation_author->value;
  $cite->description = $paragraph->field_citation_title->value;

  $quote = new \stdClass();
  $quote->title = $paragraph->field_heading->value;
  $quote->content = $paragraph->field_formatted_text->value;
  $quote->cite = $cite;

  $testimonial = new \stdClass();
  $testimonial->id = $id;
  $testimonial->quote = $quote;

  if ($paragraph->field_media->target_id && $paragraph->field_media->entity->field_media_image->target_id) {
    $testimonial->imageSource = file_create_url($paragraph->field_media->entity->field_media_image->entity->getFileUri());
    $testimonial->altText = $paragraph->field_media->entity->field_media_image->alt;
  }

  $settings = [];
  $settings['components'][$paragraph->bundle()][$id] = $testimonial;



  $variables['content']['#attached']['drupalSettings']['asu'] = $settings;
  $variables['content']['#attached']['library'][] = 'asu_react_core/testimonial-carousel';
}